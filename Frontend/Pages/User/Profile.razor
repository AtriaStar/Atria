@page "/profile"
@using Models
@using Models.DTO
@inject NavigationManager NavigationManager

<div class="container-xl">
    <div class="row pt-4 px-md-2">
        <div class="col-3">
            <div class="card">
                <img src="images/default_avatar.png" class="avatar card-img-top p-3"/>
                <div class="card-body">
                    <div class="">@_user.Title</div>
                    <h5 class="card-title">@_user.FirstNames @_user.LastName</h5>
                    <div class="">@_user.Biography</div>
                    <div class="email pt-2 mt-2">@_user.Email</div>
                </div>
            </div>


        </div>
        <div class="col">
            <div class="d-flex">
                <div class="nav nav-tabs me-auto profile-nav">
                    <NavLink href="profile?type=wse" class="nav-link" Match="NavLinkMatch.All">WSE</NavLink>
                    <NavLink href="profile?type=bookmarks" class="nav-link">Lesezeichen</NavLink>
                    <NavLink href="profile?type=ratings" class="nav-link">Bewertungen</NavLink>
                    <NavLink href="profile?type=drafts" class="nav-link">Entwürfe</NavLink>
                </div>
                <div class="py-2 px-3">
                    <input class="profile-searchbar" type="search" @bind-value="_filter" placeholder="Search by Name">
                </div>
            </div>

            <div class="list-group list-group-flush profile-data-list">
                @switch (Type) {
                    case "wse":
                        <WSE SummaryDtos="_summaryDtos"/>
                        break;
                    case "bookmarks":
                        <WSE SummaryDtos="_summaryDtos"/>
                        break;
                    case "ratings":
                        <Ratings/>
                        break;
                    case "drafts":
                        <Drafts/>
                        break;
                    default:
                        NavigationManager.NavigateTo(NavigationManager.GetUriWithQueryParameter("type", "wse"));
                        break;
                }
            </div>
        </div>
    </div>
</div>

@*
<div class="container-xl">
    <div class="row pt-4 px-md-2 mb-3">
        <div class="col-3 d-flex">
            <img src="images/default_avatar.png" class="avatar img-fluid"/>
        </div>
        <div class="col-9 d-flex flex-column justify-content-center">
            <div class="">@_user.Title</div>
            <div class="">@_user.FirstNames @_user.LastName</div>
            <div class="mb-2">@_user.Email</div>
            <div class="">Biographie: <br/> @_user.Biography</div>
        </div>
    </div>
    <div class="row px-md-2 mb-3 justify-content-between">
        <div class="col-3 offset-3">
            <div class="">
                Searchbar
            </div>
        </div>
        <div class="col-3">
            <div class="">
                Filter
            </div>
        </div>
    </div>
    <div class="row px-md-2">
        <div class="col-3 d-none d-md-block">
            <div class="list-group">
                <NavLink href="profile?type=wse" class="list-group-item list-group-item-action" Match="NavLinkMatch.All">WSE</NavLink>
                <NavLink href="profile?type=bookmarks" class="list-group-item list-group-item-action">Lesezeichen</NavLink>
                <NavLink href="profile?type=ratings" class="list-group-item list-group-item-action">Bewertungen</NavLink>
                <NavLink href="profile?type=drafts" class="list-group-item list-group-item-action">Entwürfe</NavLink>
            </div>
        </div>
        <div class="col-md-9">
            @switch (Type) {
                case "wse":
                    <WSE SummaryDtos="_summaryDtos"/>
                    break;
                case "bookmarks":
                    <Bookmarks/>
                    break;
                case "ratings":
                    <Ratings/>
                    break;
                case "drafts":
                    <Drafts/>
                    break;
                default:
                    NavigationManager.NavigateTo(NavigationManager.GetUriWithQueryParameter("type", "wse"));
                    break;
            }
        </div>
    </div>
</div>
*@

@code {

    [Parameter]
    [SupplyParameterFromQuery]
    public string? Type { get; set; } = "";

    private IList<WSESummaryDto> _summaryDtos = null!;

    private string? _filter;

    Models.User _user = null!;

    protected override void OnInitialized() {
        @* Mock Data generation *@
        _user = new User {
            FirstNames = "Hans", Email = "hans@hansi.hansen", Biography = "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna ", Title = "Herr", LastName = "Hansemann"
        };
        _summaryDtos = new List<WSESummaryDto>();
        WSESummaryDto wseSummaryDto1 = new WSESummaryDto("hans", "der hans", new List<Tag>(), DateTimeOffset.Now, true, 3.5, 10, new Uri("http://www.google.com"));
        _summaryDtos.Add(wseSummaryDto1);

        WSESummaryDto wseSummaryDto2 = new WSESummaryDto("günther", "der günther", new List<Tag>(), DateTimeOffset.Now, false, 3.5, 10, new Uri("http://www.duckduckgo.com"));
        _summaryDtos.Add(wseSummaryDto2);
        _summaryDtos.Add(wseSummaryDto1);

        @* mock data generation end *@

        if (Type is null or "") {
            NavigationManager.NavigateTo(NavigationManager.GetUriWithQueryParameter("type", "wse"));
        }
    }

}