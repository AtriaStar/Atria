@using System.Net
@inject HttpClient HttpClient
@inject IJSRuntime Js
@inject NavigationManager NavManager


<div class="modal fade show" id="myModal" style="display:block; background-color: rgba(10,10,10,.8);" aria-modal="true" role="dialog">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Passwort ändern</h5>
            </div>
            <EditForm Model="_changePasswordDto" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator></DataAnnotationsValidator>
                <ValidationSummary></ValidationSummary>
                <div class="modal-body">
                    <p>Geben Sie Ihr aktuelles Passwort und ein neues Passwort ein.</p>

                    <div class="mb-3">
                        <label class="form-label">aktuelles Passwort</label>
                        <div class="ui-field">
                            <InputText type="password" id="currentPassword" class="form-control" @bind-Value="_changePasswordDto.Password"></InputText>
                            <ValidationMessage For="() => _changePasswordDto.Password"></ValidationMessage>
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">neues Passwort</label>
                        <div class="ui-field">
                            <InputText type="password" id="newPassword" class="form-control" @bind-Value="_changePasswordDto.NewPassword"></InputText>
                            <ValidationMessage For="() => _changePasswordDto.NewPassword"></ValidationMessage>                            
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">neues Passwort bestätigen</label>
                        <div class="ui-field">
                            <InputText type="password" id="confirmPassword" class="form-control" @bind-Value="_changePasswordDto.ConfirmPassword"></InputText>
                            <ValidationMessage For="() => _changePasswordDto.ConfirmPassword"></ValidationMessage>                            
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" @onclick="@ModalCancel">Abbrechen</button>
                    <button type="submit" class="btn btn-success">Speichern</button>
                </div>
            </EditForm>
            <div class="text-center fw-bold text-danger">
                @ChangePasswordMessage
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public EventCallback<bool> OnClose { get; set; }

    private readonly Models.DTO.ChangePasswordDto _changePasswordDto = new();

    private string ChangePasswordMessage = default!;

    public Task ModalCancel()
    {
        return OnClose.InvokeAsync(false);
    }

    private async Task HandleValidSubmit() {
        var response = await HttpClient.PostAsJsonAsync("changePassword", _changePasswordDto);

        if (response.IsSuccessStatusCode) {
            await Js.InvokeVoidAsync("history.back");
            NavManager.NavigateTo(NavManager.Uri, forceLoad: true); // Refresh header

            await OnClose.InvokeAsync(true);

        }
        else if (response.StatusCode == HttpStatusCode.Unauthorized) {

            ChangePasswordMessage = await response.Content.ReadAsStringAsync();
        }
        else {
            NavManager.NavigateTo("/internal-server-error");
        }
    }
}