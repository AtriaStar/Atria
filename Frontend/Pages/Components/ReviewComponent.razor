@using Models
@using System.Web
@using System.Net

<div class="card mt-3 mb-4">
    <div class="card-body">
        <div class="row">
            <div class="col-auto">
                @for (int i = 1; i <= (int)Review.StarCount; i++)
                {
                    <i class="fa fa-star rating-color"></i>
                }
                @for (int i = (int)Review.StarCount + 1; i <= 5; i++)
                {
                    <i class="fa fa-star rating-uncolored"></i>
                }
                <div class="card-subtitle mt-1 text-muted">@Review.CreationTime</div>
            </div>
            <div class="col mt-1">
                <h6 class="card-title fw-bold">@Review.Title</h6>
                <div class="card-subtitle mb-2 text-muted">@ReviewCreator.FirstNames @ReviewCreator.LastName</div>
                <p class="card-text">@Review.Description</p>
            </div>
        </div>
        @if (_isLoggedIn && Review.CreatorId == _userId)
        {
            <div class="d-grid gap-2 mt-2 d-flex justify-content-end">
                <button class="btn btn-outline-success btn-small" type="button" href="editReview">
                    Bearbeiten
                </button>
                <button class="btn btn-outline-danger btn-small" type="button" @onclick="() => OpenDeleteReviewDialog(Review.Id)">
                    Löschen
                </button>
            </div>
        }
    </div>
</div>   


@if (DeleteReviewDialogOpen) {
    <Frontend.Pages.Components.DeleteModal 
    Title="Bewertung löschen" 
    Text="Sind Sie sicher, dass Sie Ihre Bewertung löschen möchten?" 
    ToDelete="review" 
    WseId="WseId"
    ReviewId="ReviewIdToDelete"
    OnClose="@OnDeleteReviewDialogClose"/>
}

@code {
    [Inject]
    private HttpClient HttpClient { get; set; } = default!;

    [Parameter]
    public long WseId { get; set; }

    [Parameter]
    public Review Review { get; set; } = null!;

    [Parameter]
    public bool _isLoggedIn { get; set; }

    [Parameter]
    public long _userId { get; set; }

    private User ReviewCreator { get; set; } = new();

    protected override async Task OnInitializedAsync() {
        ReviewCreator = await HttpClient.GetFromJsonAsync<User>("user/" + Review.CreatorId) ?? new User() {};
    }

    /*-------------MODALS-------------*/
    private long ReviewIdToDelete { get; set; }
    private bool DeleteReviewDialogOpen { get; set; }

    private void OpenDeleteReviewDialog(long reviewId) {
        DeleteReviewDialogOpen = true;
        ReviewIdToDelete = reviewId;
        StateHasChanged();
    }

    private void OnDeleteReviewDialogClose(bool accepted) {
        DeleteReviewDialogOpen = false;
        StateHasChanged();
    }
}
