@inject NavigationManager NavManager
@inject HttpClient HttpClient

<button class="btn @ButtonStyle" type="button" @onclick="() => ModalBase.Open()">Löschen</button>

<ModalBase @ref="ModalBase">
    <ModalTitle>@ModalTitle</ModalTitle>
    <ModalBody>@ModalBody</ModalBody>
    <ModalFooter>
        @if (_errorMessage == null) {
            <button type="button" class="btn btn-success" @onclick="() => ModalBase.Close()">Abbrechen</button>
            <button type="button" class="btn btn-danger" @onclick="ModalDelete">Löschen</button>
        } else {
            <div class="text-center fw-bold text-danger">
                @_errorMessage
            </div>
        }
    </ModalFooter>
</ModalBase>

@code {

    [Parameter]
    public string? ButtonStyle { get; set; }

    private ModalBase ModalBase { get; set; } = null!;

    [Parameter]
    public string ModalTitle { get; set; } = null!;

    [Parameter]
    public string ModalBody { get; set; } = null!;

    [Parameter]
    public string ToDelete { get; set; } = null!;

    [Parameter]
    public long WseId { get; set; }

    [Parameter]
    public long? QuestionId { get; set; }

    [Parameter]
    public long? AnswerId { get; set; }

    [Parameter]
    public long? ReviewId { get; set; }

    private string? _errorMessage;

    private async void ModalDelete() {
        HttpResponseMessage response;

        switch (ToDelete) {
            case "wse":
                response = await HttpClient.DeleteAsync("wse/" + WseId);
                if (response.IsSuccessStatusCode) {
                    NavManager.NavigateTo("", true);
                }
                break;
            case "question":
                response = await HttpClient.DeleteAsync("wse/" + WseId + "/question/" + QuestionId);
                if (response.IsSuccessStatusCode) {
                    NavManager.NavigateTo("/wse/" + WseId, true);
                }
                break;
            case "answer":
                response = await HttpClient.DeleteAsync("wse/" + WseId + "/question/" + QuestionId + "/answer/" + AnswerId);
                if (response.IsSuccessStatusCode) {
                    NavManager.NavigateTo("/wse/" + WseId, true);
                }
                break;
            case "review":
                response = await HttpClient.DeleteAsync("wse/" + WseId + "/review/" + ReviewId);
                if (response.IsSuccessStatusCode) {
                    NavManager.NavigateTo("/wse/" + WseId, true);
                }
                break;
        }

        _errorMessage = "Ein Fehler ist aufgetreten.";
    }

}
