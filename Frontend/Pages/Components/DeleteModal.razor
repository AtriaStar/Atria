@inject NavigationManager NavManager
@inject HttpClient HttpClient
@inject IJSRuntime Js

<div class="modal fade show" id="myModal" style="display:block; background-color: rgba(10,10,10,.8);" aria-modal="true" role="dialog">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Title</h5>
            </div>
            <div class="modal-body">
                <p>@Text</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" @onclick="@ModalCancel">Abbrechen</button>
                <button type="button" class="btn btn-danger" @onclick="@ModalDelete">Löschen</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string Title { get; set; } = null!;

    [Parameter]
    public string Text { get; set; } = null!;

    [Parameter]
    public string ToDelete { get; set; } = null!;

    [Parameter]
    public long WseId { get; set; }

    [Parameter]
    public long? QuestionId { get; set; }

    [Parameter]
    public long? AnswerId { get; set; }

    [Parameter]
    public long? ReviewId { get; set; }

    [Parameter]
    public EventCallback<bool> OnClose { get; set; }

    private Task ModalCancel()
    {
        return OnClose.InvokeAsync(false);
    }

    private async void ModalDelete()
    {
        switch (ToDelete)
        {
            case "wse":
                await HttpClient.DeleteAsync("wse" + WseId);
                NavManager.NavigateTo("");
                break;
            case "question":
                await HttpClient.DeleteAsync("wse" + WseId + "/question/" + QuestionId);
                NavManager.NavigateTo("/wse" + WseId);
                break;
            case "answer":
                await HttpClient.DeleteAsync("wse" + WseId + "/question/" + QuestionId + "/answer/" + AnswerId);
                NavManager.NavigateTo("/wse" + WseId);
                break;
            case "review":
                await HttpClient.DeleteAsync("wse" + WseId + "/review/" + ReviewId);
                NavManager.NavigateTo("/wse" + WseId);
                break;
        }
    }
}
