@page "/"
@using Models
@using Models.DTO
@inject NavigationManager NavigationManager

<PageTitle>Atria</PageTitle>

<div class="container-xxl">
    <div class="searchbar position-relative mb-3 mt-4">
        <input type="text" class="form-control form-control-lg" placeholder="Suche nach..." @bind-value="SearchString"
               @onkeyup="SearchInput">
        <i class="fa fa-search position-absolute top-50 end-0 px-2 translate-middle"></i>
    </div>
    <div class="d-flex flex-wrap">
        <div class="nav nav-pills mb-2">
            <div class="nav-item">
                <NavLink href="@Navigate("type", null)" class="nav-link" Match="NavLinkMatch.All">WSE</NavLink>
            </div>
            <div class="nav-item ms-3">
                <NavLink href="@Navigate("type", "user")" class="nav-link">User</NavLink>
            </div>
        </div>
        <div class="d-flex mb-2 ms-auto">
            <div class="dropdown ms-3
">
                <button class="btn btn-outline-primary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                    Filter
                </button>
                <div class="dropdown-menu dropdown-menu-end ps-2">
                    @*TODO: margin/padidng nach rechts
                        sollte sich nicht schließen wenn man aufs dropdown auf ne stelle klickt wos keine funktionalität hat
                    *@
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="" id="flexCheckOnline">
                        <label class="form-check-label" for="flexCheckOnline">
                             <i class="fa-solid fa-circle text-success"></i>
                            Online
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="" id="flexCheckBookmarks">
                        <label class="form-check-label" for="flexCheckBookmarks">
                            @*TODO insert bookmark icon*@
                            Lesezeichen
                        </label>
                    </div>
                    <div>
                        Bewertung
                    </div>
                    <div>
                        @*TODO insert stars*@
                    </div>
                    <div>
                        Tags
                    </div>
                    <div>
                         <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="" id="flexCheckBookmarks">
                        Popular Tag 1
                         </div>
                         <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="" id="flexCheckBookmarks">
                        Popular Tag 2
                         </div>
                         <div class="form-check">
                        <input class="form-check-input" type="checkbox" value="" id="flexCheckBookmarks">
                        Popular Tag 3
                         </div>
                    </div>
                </div>
            </div>
            <div class="dropdown ms-3">
                <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown" aria-expanded="false">
                    Sortieren nach
                </button>
                <ul class="dropdown-menu dropdown-menu-end">
                    <NavLink href="@Navigate("sort", null)" class="dropdown-item" Match="NavLinkMatch.All">Relevanz</NavLink>
                    <NavLink href="@Navigate("sort", "useCount")" class="dropdown-item">Aufrufzahl</NavLink>
                    <NavLink href="@Navigate("sort", "reviewAverage")" class="dropdown-item">Bewertungsdurchschnitt</NavLink>
                    <NavLink href="@Navigate("sort", "recency")" class="dropdown-item">Neueste</NavLink>
                </ul>
            </div>
        </div>
    </div>
    <div class="list-group list-group-flush search-data-list">
        <WseSummaryList SummaryDtos="_summaryDtos"></WseSummaryList>
    </div>
</div>

@code {

    [Parameter]
    [SupplyParameterFromQuery]
    public string? Sort { get; set; }

    [Parameter]
    [SupplyParameterFromQuery]
    public string? Type { get; set; }

    [Parameter]
    [SupplyParameterFromQuery]
    public string? Query { get; set; }

    private string? SearchString { get; set; }

    private IList<WseSummaryDto> _summaryDtos = null!;

    private void SearchInput(KeyboardEventArgs evt) {
        if (evt.Key == "Enter") {
            Search();
        }
    }

    private void Search() {
        NavigationManager.NavigateTo(Navigate("query", SearchString));
    }

    protected override void OnInitialized() {
        @* Mock data gen *@
        _summaryDtos = new List<WseSummaryDto>();
        WseSummaryDto wseSummaryDto1 = new WseSummaryDto("hans", "der hans", new List<Tag>(), DateTimeOffset.Now, true, 3.5, 10, new Uri("http://www.google.com"));
        _summaryDtos.Add(wseSummaryDto1);

        WseSummaryDto wseSummaryDto2 = new WseSummaryDto("günther", "der günther", new List<Tag>(), DateTimeOffset.Now, false, 3.5, 10, new Uri("http://www.duckduckgo.com"));
        _summaryDtos.Add(wseSummaryDto2);
        _summaryDtos.Add(wseSummaryDto1);
    }


    private string Navigate(string key, string? value) {
        return NavigationManager.GetUriWithQueryParameter(key, value);
    }

}