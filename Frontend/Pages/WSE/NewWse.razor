@page "/newWse"
@using Models
@using Models.DTO
@using System.Net
@using Frontend.Pages.WSE.Components.FilterModal
@inject NavigationManager NavigationManager
@inject HttpClient HttpClient

<PageTitle>Atria - Neuer Eintrag</PageTitle>

<div class="container-lg mt-3">

    <h2>Neuer Eintrag</h2>

    <div class="fw-bold text-danger">
        @_conflictMessage
    </div>

    <EditForm Model="_webserviceEntry" OnValidSubmit="PublishWse">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>

        <div class="mt-3 mb-3">
            <label class="form-label fw-bold">
                Name
                <small style="color: red">*Pflicht</small>
            </label>
            <div class="ui-field">
                <InputText class="form-control" id="name" @bind-Value="_webserviceEntry.Name"/>
            </div>
            <ValidationMessage For="() => _webserviceEntry.Name"></ValidationMessage>
        </div>

        <div class="mb-3">
            <label class="form-label fw-bold">
                Kurzbeschreibung
                <small class="text-muted">(max. 50 Zeichen)</small>
                <small style="color: red">*Pflicht für die Veröffentlichung</small>
            </label>
            <div class="ui-field">
                <InputText class="form-control" id="shortDescription" @bind-Value="_webserviceEntry.ShortDescription"/>
            </div>
            <ValidationMessage For="() => _webserviceEntry.ShortDescription"></ValidationMessage>
        </div>

        <div class="mb-4">
            <label class="form-label fw-bold">
                Verlinkung
                <small style="color: red">*Pflicht für die Veröffentlichung</small>
            </label>
            <div class="ui-field">
                <InputText class="form-control" type="url" placeholder="http(s)://..." id="link" @bind-Value="_webserviceEntry.Link"/>
            </div>
            <ValidationMessage For="() => _webserviceEntry.Link"></ValidationMessage>
        </div>

        <hr/>

        <div class="mt-4 mb-2">
            <label class="form-label fw-bold">
                Tags
                <small class="text-muted">(zum Auswählen Strg gedrückt halten)</small>
            </label>
            <TagList @bind-SelectedTags="_webserviceEntry.Tags"></TagList>
        </div>

        <div class="mb-4">
            <label class="form-label fw-bold">
                neue Tags erstellen
                <small class="text-muted">(kommagetrennt)</small>
            </label>
            <div class="ui-field">
                <InputTextArea class="form-control" rows="3" placeholder="tag1, tag2, ..." id="newTags" @bind-Value="_tagDto.NewTagsStr"/>
            </div>
            <ValidationMessage For="() => _tagDto.NewTagsStr"></ValidationMessage>
        </div>

        <hr/>

        <div class="mt-4 mb-3">
            <label class="form-label fw-bold">Dokumentation</label>
            <div class="ui-field">
                <InputText class="form-control mb-2" type="url" placeholder="Link" id="docLink" @bind-Value="_webserviceEntry.DocumentationLink"/>
            </div>
            <div class="ui-field">
                <InputTextArea class="form-control" rows="3" placeholder="Text" id="doc" @bind-Value="_webserviceEntry.Documentation"/>
            </div>
        </div>

        <div class="mb-3">
            <label class="form-label fw-bold">Volltextbeschreibung</label>
            <div class="ui-field">
                <InputTextArea class="form-control" rows="3" id="fullDescription" @bind-Value="_webserviceEntry.FullDescription"/>
            </div>
        </div>

        <div class="mb-4">
            <label class="form-label fw-bold">Änderungshistorie</label>
            <div class="ui-field">
                <InputTextArea class="form-control" rows="3" id="changeLog" @bind-Value="_webserviceEntry.ChangeLog"/>
            </div>
        </div>

        <div class="d-grid gap-2 d-flex justify-content-end mb-4">
            <div class="btn-group">
                <button class="btn btn-success" type="submit">
                    Veröffentlichen
                </button>
            </div>
        </div>
    </EditForm>
</div>

@code {

    private WebserviceEntry _webserviceEntry = new();

    [CascadingParameter]
    public LoginState LoginState { get; init; } = default!;

    private readonly TagDto _tagDto = new();

    private string? _conflictMessage;

    protected override async Task OnInitializedAsync() {
        await LoginState.Init;
        if (!LoginState.LoggedIn) {
            NavigationManager.NavigateTo("");
        }
    }

    private async void PublishWse() {
    //set contact and tags
        _webserviceEntry.ContactPersonId = LoginState.User!.Id;

        _webserviceEntry.Tags.UnionWith(_tagDto.NewTagsStr?.Split(',', StringSplitOptions.TrimEntries).Select(x => new Tag {
            Name = x
        }) ?? Enumerable.Empty<Tag>());

    // send to api
        var response = await HttpClient.PutAsJsonAsync("wse", _webserviceEntry);
        if (response.IsSuccessStatusCode) {
            var wseId = (await response.Content.ReadFromJsonAsync<WebserviceEntry>())!.Id;
            NavigationManager.NavigateTo("wse/" + wseId);
        } else if (response.StatusCode == HttpStatusCode.Conflict) {
            _conflictMessage = await response.Content.ReadAsStringAsync();
        } else {
            NavigationManager.NavigateTo("/internal-server-error");
        }
    }

}
