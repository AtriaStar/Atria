@using Models
@using Frontend.Services
<li class="list-group-item px-0">
    <div class="row">
        <div class="col-auto">
            <h6 class="fw-bold mt-1">Antwort:</h6>
        </div>
        <div class="col">
            <h6 class="fw-bold mt-1 mb-1">
                @AnswerCreator.FirstNames @AnswerCreator.LastName
                <small class="text-muted">
                    <Tooltip Text="@Answer.CreationTime.ToString()">
                        @NiceTimeSpanFormatterService.NiceFormat(DateTimeOffset.UtcNow - Answer.CreationTime)
                    </Tooltip>
                </small>
            </h6>
            @Answer.Text
        </div>
    </div>
    <AuthView UserIdClaim="Answer.CreatorId">
        <AuthorizedAndMatching>
            <div class="d-grid mt-2 d-flex justify-content-end">
                <DeleteModal
                    ModalTitle="Antwort löschen"
                    ModalBody="Sind Sie sicher, dass Sie Ihre Antwort löschen möchten?"
                    ToDelete="answer"
                    WseId="Answer.WseId"
                    QuestionId="Answer.QuestionId"
                    AnswerId="Answer.Id"
                    ButtonStyle="btn-outline-danger btn-small">
                </DeleteModal>
            </div>
        </AuthorizedAndMatching>
    </AuthView>
</li>

@code {

    [Inject]
    private HttpClient HttpClient { get; set; } = default!;

    [Parameter]
    public Answer Answer { get; set; } = null!;

    private User AnswerCreator { get; set; } = new();

    protected override async Task OnInitializedAsync() {
        AnswerCreator = await HttpClient.GetFromJsonAsync<User>("user/" + Answer.CreatorId) ?? new User();
    }

}
