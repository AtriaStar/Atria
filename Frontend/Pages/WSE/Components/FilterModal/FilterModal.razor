@using Models
@inject NavigationManager NavigationManager

<button class="btn btn-outline-primary ms-3" type="button" @onclick="() => ModalBase.Open()">
    Filter
</button>

<ModalBase @ref="ModalBase">
    <ModalTitle>
        Filter
    </ModalTitle>
    <ModalBody>

        <div class="form-check">
            <input class="form-check-input" type="checkbox" id="flexCheckOnline" @bind="IsOnline"/>
            <label class="form-check-label" for="flexCheckOnline">
                <i class="fa-solid fa-circle text-success"></i>
                Online
            </label>
        </div>
        <hr/>
        <div>
            Bewertung
            <div class="row mt-2">
                <div class="col-5">
                    <div class="ui-field">
                        <select class="form-select form-select-sm" @bind="SelectedStarNum">
                            <option value="0">Beliebig</option>
                            <option value="1">1 oder mehr</option>
                            <option value="2">2 oder mehr</option>
                            <option value="3">3 oder mehr</option>
                            <option value="4">4 oder mehr</option>
                            <option value="5">5</option>
                        </select>
                    </div>
                </div>
                <div class="col-auto">
                    @for (int i = 1; i <= SelectedStarNum; i++) {
                        <i class="fa fa-star rating-color me-1"></i>
                    }
                    @for (int i = 1; i <= (5 - SelectedStarNum); i++) {
                        <i class="fa fa-star rating-uncolored me-1"></i>
                    }
                </div>
            </div>
        </div>
        <hr/>
        <TagList @bind-SelectedTags="_selectedTags" SelectedTagsStr="SelectedTagsStr"></TagList>

    </ModalBody>
    <ModalFooter>
        <button type="button" class="btn btn-success" @onclick="ModalApply">Anwenden</button>
    </ModalFooter>
</ModalBase>

@code {

    private ModalBase ModalBase { get; set; } = null!;

    [Parameter]
    public bool? IsOnline { get; set; }

    [Parameter]
    public bool? HasBookmark { get; set; }

    [Parameter]
    public int? SelectedStarNum { get; set; } = 0;

    [Parameter]
    public string[]? SelectedTagsStr { get; set; }

    private ISet<Tag> _selectedTags = new HashSet<Tag>();

    private void ModalApply() {
        ModalBase.Close();
    // Generate string array for query
        var selectedTagsString = _selectedTags.Select(tag => tag.Name).ToArray();
        NavigationManager.NavigateTo(NavigationManager.GetUriWithQueryParameters(new Dictionary<string, object?> {
            ["IsOnline"] = IsOnline,
            ["HasBookmark"] = HasBookmark,
            ["minReviewAvg"] = SelectedStarNum,
            ["tags"] = selectedTagsString
        }));
    }

}
