@page "/wse/{WseId:long}/{WseName?}"
@using Models
@using System.Web

<PageTitle>Atria - WseName</PageTitle>

<div class="container-xxl mt-4">


@if (isCollab) {
    @if (!_displayForm) {
        <div class="d-grid gap-2 mt-4 mb-4 d-flex justify-content-end">
            <button class="btn btn-success" type="button" @onclick="() => _displayForm = !_displayForm">
                Bearbeiten
            </button>
            <button class="btn btn-danger" type="button" @onclick="OpenDeleteWseDialog">
                Löschen
            </button>
        </div>
    } else {
        <EditForm Model="Wse" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <div class="d-grid gap-2 mt-4 mb-4 d-flex justify-content-end">
                <button class="btn btn-success" type="submit">
                    Speichern
                </button>
            </div>
            <ValidationSummary></ValidationSummary>
        </EditForm>
    }
}

@*------------HEADER CARD------------*@
<div class="card mb-4">
    <div class="card-body">
        <div class="row mb-2">
             <div class="col-auto">
                    <i class="fa-solid fa-circle @StyleOnlineStatus(Wse)"></i>
                </div>
            <div class="col ps-0">
                <h3 class="card-title fw-bold">
                    @if (!_displayForm) {
                        @Wse.Name
                    } else {
                        <EditForm Model="Wse" OnValidSubmit="HandleValidSubmit">
                            <DataAnnotationsValidator></DataAnnotationsValidator>
                            <InputText @bind-Value="Wse.Name" id="name" type="text" class="form-control" placeholder="Name"></InputText>
                            <ValidationSummary></ValidationSummary>
                        </EditForm>
                    }
                </h3>
            </div>
            <div class="col-auto d-flex align-content-end me-1">
                @{
                    var bookmarkState = isBookmark ? "bi-bookmark-fill" : "bi-bookmark";
                    var bookmarkTitle = isBookmark ? "Lesezeichen entfernen" : "Als Lesezeichen hinzufügen";
                }
                <i class="bi @bookmarkState fs-4" type="button" title="@bookmarkTitle" style="color: #dc3545" @onclick="ChangeBookmarkStatus"></i>
            </div>
            <div class="col-auto d-flex align-content-end">
                <a class="fa-solid fa-arrow-up-right-from-square text-decoration-none fs-2" title="Zur Webservice" href="@Wse.Link"/>
            </div>
        </div>
        <h5 class="card-subtitle mb-2 me-2 text-muted">
            Ansprechpartner
            <button class="btn btn-outline-secondary btn-small" @onclick="OpenCollabDialog">weitere Kollaboratoren</button>
        </h5>
        @if (!_displayForm) {
            <div class="card-text">@Wse.ShortDescription</div>
        } else {
            <EditForm Model="Wse" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator></DataAnnotationsValidator>
                <InputText @bind-Value="Wse.ShortDescription" id="shortDescription" type="text" class="form-control" placeholder="Kurztextbeschreibung"></InputText>
                <ValidationSummary></ValidationSummary>
            </EditForm>
        }

    </div>
</div>

@if (_displayForm) {
    <div class="col-auto mt-sm-1">

        <div class="card mb-4">
            <h6 class="card-header fw-bold">Link</h6>
            <div class="card-body">
                <EditForm Model="Wse" OnValidSubmit="HandleValidSubmit">
                    <DataAnnotationsValidator></DataAnnotationsValidator>
                    <InputText @bind-Value="Wse.Link" id="link" type="text" class="form-control" placeholder="Link"></InputText>
                    <ValidationSummary></ValidationSummary>
                </EditForm>
            </div>
        </div>
    </div>
}

<div class="row mb-4">
    @*------------REVIEW AND TAGS------------*@
    <div class="col-md-3 mb-4">
        <div class="card mb-4">
            <div class="card-body">
                <h6 class="card-title fw-bold">Bewertung</h6>
                <div class="row">
                    <div class="col-auto">
                        <i class="fa fa-star rating-color"/>
                        <i class="fa fa-star rating-color"/>
                        <i class="fa fa-star rating-color"/>
                        <i class="fa fa-star rating-color"/>
                        <i class="fa fa-star rating-color"/>
                    </div>
                    <div class="col-auto">
                        <p>xx Bewertungen</p>
                    </div>
                </div>
                @* TODO scrollspy or leave it out
                    <div class="d-grid d-flex justify-content-end">
                    <button class="btn btn-outline-secondary btn-small" type="button">zu den Bewertungen</button>
                    </div>*@
            </div>
        </div>

        <div class="card">
            <div class="card-body">
                <h6 class="card-title fw-bold">Tags</h6>
                @*mock tags*@
                <div class="card-text">
                    @for (int i = 0; i <= 20; i++) {
                        <div class="badge bg-info me-1" value="@i">Tag @i</div>
                    }
                </div>
            </div>
        </div>
    </div>

    @*------------LOG, DOC, DESC.------------*@
    <div class="col-md-9">

        <div class="card mb-4">

            <h6 class="card-header fw-bold">Änderungshistorie</h6>
            <div class="card-body">
                @if (!_displayForm) {
                    @Wse.ChangeLog
                } else {
                    <EditForm Model="Wse" OnValidSubmit="HandleValidSubmit">
                        <DataAnnotationsValidator></DataAnnotationsValidator>
                        <InputText @bind-Value="Wse.ChangeLog" id="changeLog" type="text" class="form-control" placeholder="Änderungshistorie"></InputText>
                        <ValidationSummary></ValidationSummary>
                    </EditForm>
                }
            </div>
        </div>

        <div class="card mb-4">
            <h6 class="card-header fw-bold">
                Dokumentation
                <a class="fa-solid fa-arrow-up-right-from-square text-decoration-none fs-5 ms-1" title="Zur Dokumetation" href="@Wse.DocumentationLink"/>
            </h6>
            <div class="card-body">
                @if (!_displayForm) {
                    <div class="card-text">@Wse.Documentation</div>
                } else {
                    <EditForm Model="Wse" OnValidSubmit="HandleValidSubmit">
                        <DataAnnotationsValidator></DataAnnotationsValidator>
                        <InputText @bind-Value="Wse.Documentation" id="documentation" type="text" class="form-control" placeholder="Dokumentation"></InputText>
                        <ValidationSummary></ValidationSummary>
                    </EditForm>
                }
            </div>
        </div>

        @if (_displayForm) {
            <div class="col-auto mt-sm-1">

                <div class="card mb-4">
                    <h6 class="card-header fw-bold">Dokumentations-Link</h6>
                    <div class="card-body">
                        <EditForm Model="Wse" OnValidSubmit="HandleValidSubmit">
                            <DataAnnotationsValidator></DataAnnotationsValidator>
                            <InputText @bind-Value="Wse.DocumentationLink" id="documentationLink" type="text" class="form-control" placeholder="Dokumentations-Link"></InputText>
                            <ValidationSummary></ValidationSummary>
                        </EditForm>
                    </div>
                </div>
            </div>
        }

        <div class="card">
            <h6 class="card-header fw-bold">Volltextbeschreibung</h6>
            <div class="card-body">
                @if (!_displayForm) {
                    <div class="card-text">@Wse.FullDescription</div>
                } else {
                    <EditForm Model="Wse" OnValidSubmit="HandleValidSubmit">
                        <DataAnnotationsValidator></DataAnnotationsValidator>
                        <InputText @bind-Value="Wse.FullDescription" id="fullDescription" type="text" class="form-control" placeholder="Volltextbeschreibung"></InputText>
                        <ValidationSummary></ValidationSummary>
                    </EditForm>
                }
            </div>
        </div>
    </div>
</div>

<hr/>

@*------------QNA------------*@
<h6 class="fw-bold mt-2 mb-2">Q&A</h6>

@if (isLoggedIn) {
    <div class="ui-field">
        @*TODO change to InputTextArea when EditForm added*@
        <textarea class="form-control mt-4 mb-3" type="text" placeholder="Haben Sie eine Frage?" />
    </div>
    <div class="d-grid gap-2 mt-2 mb-4 d-flex justify-content-end">
        <button class="btn btn-outline-success btn-small" type="button">
            Speichern
        </button>
    </div>
}

@*foreach question*@
<div class="accordion mb-4" id="questionAccordion">
    <div class="accordion-item">
        <div class="accordion-header px-4 py-3 bg-light border-bottom" id="question">
            <div class="row">
                <div class="col-auto">
                    <h6 class="fw-bold mt-1">Frage:</h6>
                </div>
                <div class="col ms-3">
                    <h6 class="fw-bold mt-1 mb-1">
                        Creator
                        <small class="text-muted">Date</small>
                    </h6>
                    Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.
                </div>
                @*if answers exist*@
            </div>
            <div class="d-grid gap-2 mt-3 mb-2 d-flex justify-content-end">
                @if (isLoggedIn) {
                    <button class="btn btn-outline-success btn-small" type="button">
                        Antworten
                    </button>
                    @if (isCreator) {
                        <button class="btn btn-outline-danger btn-small" type="button" @onclick="OpenDeleteQuestionDialog">
                            Löschen
                        </button>
                    }
                }
                @*if answers exist*@
                <button class="btn btn-small btn-outline-secondary collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#answerOne" aria-expanded="false" aria-controls="answerOne">
                    Antworten anzeigen
                </button>
            </div>
        </div>

        @*if answers exist*@
        <div id="answerOne" class="accordion-collapse collapse" aria-labelledby="question" data-bs-parent="#questionAccordion">
            <div class="accordion-body">
                <ul class="list-group list-group-flush py-0">
                    @*foreach answer*@
                    <li class="list-group-item px-0">
                        <div class="row">
                            <div class="col-auto">
                                <h6 class="fw-bold mt-1">Antwort:</h6>
                            </div>
                            <div class="col">
                                <h6 class="fw-bold mt-1 mb-1">
                                    Creator
                                    <small class="text-muted">Date</small>
                                </h6>
                                Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.
                            </div>
                        </div>
                        @if (isCreator) {
                            <div class="d-grid mt-2 d-flex justify-content-end">
                                <button class="btn btn-outline-danger btn-small" type="button" @onclick="OpenDeleteAnswerDialog">
                                    Löschen
                                </button>
                            </div>
                        }
                    </li>
                    <li class="list-group-item px-0">
                        <div class="row">
                            <div class="col-auto">
                                <h6 class="fw-bold mt-1">Antwort:</h6>
                            </div>
                            <div class="col">
                                <h6 class="fw-bold mt-1 mb-1">
                                    Creator
                                    <small class="text-muted">Date</small>
                                </h6>
                                Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.
                            </div>
                        </div>
                        @if (isCreator) {
                            <div class="d-grid mt-2 d-flex justify-content-end">
                                <button class="btn btn-outline-danger btn-small" type="button" @onclick="OpenDeleteAnswerDialog">
                                    Löschen
                                </button>
                            </div>
                        }
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>

@*if more questions exist*@
<div class="d-grid d-flex mt-2 mb-4 justify-content-center">
    <button class="btn btn-outline-secondary btn-small" type="button" href="">weitere Fragen</button>
</div>

<hr/>

@*------------REVIEWS------------*@
<div class="row mb-2">
    <div class="col-auto">
        <h6 class="fw-bold">Bewertungen</h6>
    </div>
    @if (isLoggedIn) {
        <div class="col-auto">
            <button class="btn btn-outline-success btn-small" type="button" href="">neue Bewertung</button>
        </div>
    }
    <div class="col-auto ms-auto">
        <div class="dropdown">
            <a class="btn btn-outline-secondary btn-small dropdown-toggle" href="#" role="button" id="dropdownMenuLink" data-bs-toggle="dropdown" aria-expanded="false">
                Sortieren nach
            </a>
            <ul class="dropdown-menu dropdown-menu-end">
                <li>
                    <a class="dropdown-item" href="#">Neuste</a>
                </li>
                <li>
                    <a class="dropdown-item" href="#">Älteste</a>
                </li>
                <li>
                    <a class="dropdown-item" href="#">Absteigend</a>
                </li>
                <li>
                    <a class="dropdown-item" href="#">Aufsteigend</a>
                </li>
            </ul>
        </div>
    </div>
</div>

@*foreach review*@
<div class="card mt-3 mb-4">
    <div class="card-body">
        <div class="row">
            <div class="col-auto">
                <i class="fa fa-star rating-color"></i>
                <i class="fa fa-star rating-color"></i>
                <i class="fa fa-star rating-color"></i>
                <i class="fa fa-star rating-color"></i>
                <i class="fa fa-star rating-uncolored"></i>
                <div class="card-subtitle mt-1 text-muted">Date</div>
            </div>
            <div class="col mt-1">
                <h6 class="card-title fw-bold">Title</h6>
                <div class="card-subtitle mb-2 text-muted">Creator</div>
                <p class="card-text">Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.</p>
            </div>
        </div>
        @if (isCreator) {
            <div class="d-grid gap-2 mt-2 d-flex justify-content-end">
                <button class="btn btn-outline-success btn-small" type="button" @onclick="() => _displayForm = !_displayForm">
                    Bearbeiten
                </button>
                <button class="btn btn-outline-danger btn-small" type="button" @onclick="OpenDeleteReviewDialog">
                    Löschen
                </button>
            </div>
        }
    </div>
</div>

@*if more reviews exist*@
<div class="d-grid d-flex mt-2 mb-2 justify-content-center">
    <button class="btn btn-outline-secondary btn-small" type="button" href="">weitere Bewertungen</button>
</div>

@if (isCollab) {
    @if (!_displayForm) {
        <div class="d-grid gap-2 mt-4 mb-4 d-flex justify-content-end">
            <button class="btn btn-success" type="button" @onclick="() => _displayForm = !_displayForm">
                Bearbeiten
            </button>
            <button class="btn btn-danger" type="button" @onclick="OpenDeleteWseDialog">
                Löschen
            </button>
        </div>
    } else {
        <EditForm Model="Wse" OnValidSubmit="HandleValidSubmit">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <div class="d-grid gap-2 mt-4 mb-4 d-flex justify-content-end">
                <button class="btn btn-success" type="submit">
                    Speichern
                </button>
            </div>
            <ValidationSummary></ValidationSummary>
        </EditForm>
    }
}
</div>

@if (CollabDialogOpen) {
    <Frontend.Pages.Components.CollabModal OnClose="@OnCollabDialogClose"/>
}

@if (DeleteQuestionDialogOpen) {
    <Frontend.Pages.Components.DeleteModal Title="Frage löschen" Text="Sind Sie sicher, dass Sie Ihre Frage löschen möchten?" OnClose="@OnDeleteQuestionDialogClose"/>
}

@if (DeleteAnswerDialogOpen) {
    <Frontend.Pages.Components.DeleteModal Title="Antwort löschen" Text="Sind Sie sicher, dass Sie Ihre Antwort löschen möchten?" OnClose="@OnDeleteAnswerDialogClose"/>
}

@if (DeleteReviewDialogOpen) {
    <Frontend.Pages.Components.DeleteModal Title="Bewertung löschen" Text="Sind Sie sicher, dass Sie Ihre Bewertung löschen möchten?" OnClose="@OnDeleteReviewDialogClose"/>
}

@if (DeleteWseDialogOpen) {
    <Frontend.Pages.Components.DeleteModal Title="Eintrag löschen" Text="Sind Sie sicher, dass Sie Ihren Eintrag löschen möchten?" OnClose="@OnDeleteWseDialogClose"/>
}

@code {

    [Inject]
    private HttpClient HttpClient { get; set; } = default!;

    public bool CollabDialogOpen { get; set; }
    public bool DeleteQuestionDialogOpen { get; set; }
    public bool DeleteAnswerDialogOpen { get; set; }
    public bool DeleteReviewDialogOpen { get; set; }
    public bool DeleteWseDialogOpen { get; set; }
    public bool isLoggedIn = true;
    public bool isCollab = true;
    public bool isCreator = true;
    public bool isBookmark = false;

    private bool _displayForm = false;

    [Parameter]
    public WebserviceEntry Wse { get; set; } = null!;

    private WebserviceEntry _cloneWse = null!;

    private void ChangeBookmarkStatus() {
        isBookmark = !isBookmark;
        @* TODO logic *@
    }

    private void OpenCollabDialog() {
        CollabDialogOpen = true;
        StateHasChanged();
    }

    private void OnCollabDialogClose(bool accepted) {
        CollabDialogOpen = false;
        StateHasChanged();
    }

    private void OpenDeleteQuestionDialog() {
        DeleteQuestionDialogOpen = true;
        StateHasChanged();
    }

    private void OnDeleteQuestionDialogClose(bool accepted) {
        DeleteQuestionDialogOpen = false;
        StateHasChanged();
    }

    private void OpenDeleteAnswerDialog() {
        DeleteAnswerDialogOpen = true;
        StateHasChanged();
    }

    private void OnDeleteAnswerDialogClose(bool accepted) {
        DeleteAnswerDialogOpen = false;
        StateHasChanged();
    }

    private void OpenDeleteReviewDialog() {
        DeleteReviewDialogOpen = true;
        StateHasChanged();
    }

    private void OnDeleteReviewDialogClose(bool accepted) {
        DeleteReviewDialogOpen = false;
        StateHasChanged();
    }

    private void OpenDeleteWseDialog() {
        DeleteWseDialogOpen = true;
        StateHasChanged();
    }

    private void OnDeleteWseDialogClose(bool accepted) {
        DeleteWseDialogOpen = false;
        StateHasChanged();
    }

    protected override void OnInitialized() {
        @* Mock Data generation *@
        Wse = new WebserviceEntry {
            Name = "Google",
            ShortDescription = "Lorem ipsum dolor sit amet",
            Link = "https://www.google.de/",
            FullDescription = "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna ",
            ChangeLog = "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam non",
            DocumentationLink = "https://de.wikipedia.org/wiki/Google",
            Documentation = "Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna ",
        };

        CloneWse();
    }

    private void HandleValidSubmit() {
        _displayForm = !_displayForm;
        CloneWse();
        @* TODO implement backend communication *@
    }

    private void CloneWse() {
        _cloneWse = new WebserviceEntry {
            Name = Wse.Name,
            ShortDescription = Wse.ShortDescription,
            Link = Wse.Link,
            FullDescription = Wse.FullDescription,
            ChangeLog = Wse.ChangeLog,
            DocumentationLink = Wse.DocumentationLink,
            Documentation = Wse.Documentation
        };
    }

    /* API STUFF, DO MERGE */

    [Parameter]
    public long WseId { get; set; }

    [Parameter]
    public string WseName { get; set; } = null!;

    [Inject]
    private NavigationManager Manager { get; set; } = null!;

    protected override async Task OnParametersSetAsync() {
	    if (Wse?.Id != WseId) {
		    var response = await HttpClient.GetAsync($"wse/{WseId}");
		    if (response.IsSuccessStatusCode) {
			    Wse = (await response.Content.ReadFromJsonAsync<WebserviceEntry>())!;
			    var fullUrl = $"wse/{WseId}/{HttpUtility.UrlEncode(Wse.Name)}";
			    if (Manager.ToBaseRelativePath(Manager.Uri) != fullUrl) {
				    Manager.NavigateTo(fullUrl);
			    }
		    } else {
			    @* TODO not found *@
		    }
	    }
    }

    private async Task<string> StyleOnlineStatus(WebserviceEntry entry) {
        var response = await HttpClient.GetAsync($"wse/{entry.Id}/checks/latest" );
        if (response.IsSuccessStatusCode) {
            if (await response.Content.ReadFromJsonAsync<bool>()) {
                return "text-success";
            } else {
                return "text-danger";            
            }
        } else {
            return "text-secondary";
        }
    }

}
