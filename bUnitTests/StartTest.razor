@using Frontend.Pages.Main
@using Frontend.Shared
@using Models
@using RichardSzalay.MockHttp
@inherits TestContext

@code {

    private async Task<MockHttpMessageHandler> Setup(bool isAuthorized) {
        var mockHttpHandler = Services.AddMockHttpClient();
        mockHttpHandler.When("http://localhost/tag").RespondJson(new List<Tag>());
        mockHttpHandler.When("http://localhost/wse/1/review/average").RespondJson(1);
        await MockAuthentication.AddMockAuthentication(this, mockHttpHandler, isAuthorized);
        var navMan = Services.GetRequiredService<FakeNavigationManager>();
        navMan.NavigateTo("http://localhost/");
        return mockHttpHandler;
    }

    [Fact]
    public async Task ShowWse() {
        await Setup(true);

        WebserviceEntry entry = new WebserviceEntry() {
            Name = "Google",
            ShortDescription = "A Search Engine",
            Link = "https://www.google.com/",
            ContactPersonId = 1,
            Id = 1,
            ViewCount = 1,
            CreatedAt = DateTimeOffset.UtcNow
        };

        IEnumerable<WebserviceEntry> list = new[] { entry };

        var cut = RenderComponent<WseSummaryList>(builder => builder.Add(p => p.Entries, list));
        Assert.Contains("Google", cut.Markup);
    }

}
